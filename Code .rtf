{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red96\green126\blue3;\red255\green255\blue255;\red61\green73\blue78;
\red9\green74\blue76;\red0\green0\blue0;\red199\green63\blue5;\red131\green148\blue149;\red17\green134\blue139;
\red52\green62\blue66;}
{\*\expandedcolortbl;;\cssrgb\c44706\c55686\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c30588\c35686\c38039;
\cssrgb\c0\c36078\c37255;\cssrgb\c0\c0\c0;\cssrgb\c82745\c32941\c0;\cssrgb\c58431\c64706\c65098;\cssrgb\c0\c59216\c61569;
\cssrgb\c26275\c30980\c32941;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25400\viewh15440\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Code for Arduino DHT.\
This code is beed for your Arduino Huzzah to write to the MQTT Explorer:\
\
\
\pard\pardeftab720\sl360\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
#include\cf4  \cf5 <ESP8266WiFi.h>
\f0\fs32 \cf6 \

\f1\fs24 \cf2 #include\cf4  \cf5 <ESP8266WebServer.h>
\f0\fs32 \cf6 \

\f1\fs24 \cf2 #include\cf4  \cf5 <ezTime.h>
\f0\fs32 \cf6 \

\f1\fs24 \cf2 #include\cf4  \cf5 <PubSubClient.h>
\f0\fs32 \cf6 \

\f1\fs24 \cf2 #include\cf4  \cf5 <DHT.h>
\f0\fs32 \cf6 \

\f1\fs24 \cf2 #include\cf4  \cf5 <DHT_U.h>
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \

\f1\fs24 \cf2 #define\cf4  \cf7 DHTTYPE\cf4  DHT22\cf8 \'a0\'a0 // DHT 22\'a0 (AM2302), AM2321
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 // Sensors - DHT22 and Nails
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 uint8_t\cf4  DHTPin = \cf5 12\cf4 ;\cf8 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 // on Pin 2 of the Huzzah
\f0\fs32 \cf6 \

\f1\fs24 \cf9 uint8_t\cf4  soilPin = \cf5 0\cf4 ;\cf8 \'a0\'a0\'a0\'a0\'a0 // ADC or A0 pin on Huzzah
\f0\fs32 \cf6 \

\f1\fs24 \cf9 float\cf4  Temperature;
\f0\fs32 \cf6 \

\f1\fs24 \cf9 float\cf4  Humidity;
\f0\fs32 \cf6 \

\f1\fs24 \cf9 int\cf4  Moisture = \cf5 1\cf4 ;\cf8  // initial value just in case web page is loaded before readMoisture called
\f0\fs32 \cf6 \

\f1\fs24 \cf9 int\cf4  sensorVCC = \cf5 13\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf9 int\cf4  blueLED = \cf5 2\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 DHT \cf7 dht\cf10 (\cf4 DHTPin, DHTTYPE\cf10 )\cf4 ;\cf8 \'a0\'a0 // Initialize DHT sensor.
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\sa320\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 // Wifi and MQTT
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf2 #include\cf4  \cf5 "arduino_secrets.h"\cf4  
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 /*
\f0\fs32 \cf6 \

\f1\fs24 \cf8 **** please enter your sensitive data in the Secret tab/arduino_secrets.h
\f0\fs32 \cf6 \

\f1\fs24 \cf8 **** using format below
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 #define SECRET_SSID "ssid name"
\f0\fs32 \cf6 \

\f1\fs24 \cf8 #define SECRET_PASS "ssid password"
\f0\fs32 \cf6 \

\f1\fs24 \cf8 #define SECRET_MQTTUSER "user name - eg student"
\f0\fs32 \cf6 \

\f1\fs24 \cf8 #define SECRET_MQTTPASS "password";
\f0\fs32 \cf6 \

\f1\fs24 \cf8 \'a0*/
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 const\cf4  \cf9 char\cf4 * ssid\'a0\'a0\'a0\'a0 = SECRET_SSID;
\f0\fs32 \cf6 \

\f1\fs24 \cf9 const\cf4  \cf9 char\cf4 * password = SECRET_PASS;
\f0\fs32 \cf6 \

\f1\fs24 \cf9 const\cf4  \cf9 char\cf4 * mqttuser = SECRET_MQTTUSER;
\f0\fs32 \cf6 \

\f1\fs24 \cf9 const\cf4  \cf9 char\cf4 * mqttpass = SECRET_MQTTPASS;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \

\f1\fs24 \cf4 ESP8266WebServer \cf7 server\cf10 (\cf5 80\cf10 )\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 const\cf4  \cf9 char\cf4 * mqtt_server = \cf5 "mqtt.cetools.org"\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 WiFiClient espClient;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 PubSubClient \cf7 client\cf10 (\cf4 espClient\cf10 )\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 long\cf4  lastMsg = \cf5 0\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf9 char\cf4  \cf7 msg\cf4 [\cf5 50\cf4 ];
\f0\fs32 \cf6 \

\f1\fs24 \cf9 int\cf4  value = \cf5 0\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 // Date and time
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 Timezone GB;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\sa320\partightenfactor0

\f1\fs24 \cf4 \cb1 \uc0\u8232 \u8232 
\f0\fs32 \cf6 \cb3 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 setup\cf10 ()\cf4  \cf10 \{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // Set up LED to be controllable via broker
\f0\fs32 \cf6 \

\f1\fs24 \cf8 \'a0 // Initialize the BUILTIN_LED pin as an output
\f0\fs32 \cf6 \

\f1\fs24 \cf8 \'a0 // Turn the LED off by making the voltage HIGH
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 pinMode\cf10 (\cf4 BUILTIN_LED, OUTPUT\cf10 )\cf4 ;\'a0\'a0\'a0\'a0 
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 digitalWrite\cf10 (\cf4 BUILTIN_LED, HIGH\cf10 )\cf4 ;\'a0 
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // Set up the outputs to control the soil sensor
\f0\fs32 \cf6 \

\f1\fs24 \cf8 \'a0 // switch and the blue LED for status indicator
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 pinMode\cf10 (\cf4 sensorVCC, OUTPUT\cf10 )\cf4 ; 
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 digitalWrite\cf10 (\cf4 sensorVCC, LOW\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 pinMode\cf10 (\cf4 blueLED, OUTPUT\cf10 )\cf4 ; 
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 digitalWrite\cf10 (\cf4 blueLED, HIGH\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // open serial connection for debug info
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 begin\cf10 (\cf5 115200\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 delay\cf10 (\cf5 100\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // start DHT sensor
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 pinMode\cf10 (\cf4 DHTPin, INPUT\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 dht\cf4 .\cf7 begin\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // run initialisation functions
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 startWifi\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 startWebserver\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 syncDate\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // start MQTT server
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 client\cf4 .\cf7 setServer\cf10 (\cf4 mqtt_server, \cf5 1884\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 client\cf4 .\cf7 setCallback\cf10 (\cf4 callback\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 loop\cf10 ()\cf4  \cf10 \{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // handler for receiving requests to webserver
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 server\cf4 .\cf7 handleClient\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf2 if\cf4  \cf10 (\cf7 minuteChanged\cf10 ())\cf4  \cf10 \{
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf7 readMoisture\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf7 sendMQTT\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf7 GB\cf4 .\cf7 dateTime\cf10 (\cf5 "H:i:s"\cf10 ))\cf4 ;\cf8  // UTC.dateTime("l, d-M-y H:i:s.v T")
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf10 \}
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 client\cf4 .\cf7 loop\cf10 ()\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 readMoisture\cf10 ()\{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // power the sensor
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 digitalWrite\cf10 (\cf4 sensorVCC, HIGH\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 digitalWrite\cf10 (\cf4 blueLED, LOW\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 delay\cf10 (\cf5 100\cf10 )\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // read the value from the sensor:
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 Moisture = \cf7 analogRead\cf10 (\cf4 soilPin\cf10 )\cf4 ;\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 digitalWrite\cf10 (\cf4 sensorVCC, LOW\cf10 )\cf4 ;\'a0 
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 digitalWrite\cf10 (\cf4 blueLED, HIGH\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 delay\cf10 (\cf5 100\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "Wet "\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf4 Moisture\cf10 )\cf4 ;\cf8 \'a0\'a0 // read the value from the nails
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 startWifi\cf10 ()\cf4  \cf10 \{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // We start by connecting to a WiFi network
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "Connecting to "\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf4 ssid\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 WiFi\cf4 .\cf7 begin\cf10 (\cf4 ssid, password\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // check to see if connected and wait until you are
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf2 while\cf4  \cf10 (\cf7 WiFi\cf4 .\cf7 status\cf10 ()\cf4  != WL_CONNECTED\cf10 )\cf4  \cf10 \{
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf7 delay\cf10 (\cf5 500\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "."\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf10 \}
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf5 ""\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf5 "WiFi connected"\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "IP address: "\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf7 WiFi\cf4 .\cf7 localIP\cf10 ())\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 syncDate\cf10 ()\cf4  \cf10 \{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // get real date and time
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 waitForSync\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf5 "UTC: "\cf4  + \cf7 UTC\cf4 .\cf7 dateTime\cf10 ())\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 GB\cf4 .\cf7 setLocation\cf10 (\cf5 "Europe/London"\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf5 "London time: "\cf4  + \cf7 GB\cf4 .\cf7 dateTime\cf10 ())\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 sendMQTT\cf10 ()\cf4  \cf10 \{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf2 if\cf4  \cf10 (\cf4 !\cf7 client\cf4 .\cf7 connected\cf10 ())\cf4  \cf10 \{
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf7 reconnect\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf10 \}
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 client\cf4 .\cf7 loop\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 Temperature = \cf7 dht\cf4 .\cf7 readTemperature\cf10 ()\cf4 ;\cf8  // Gets the values of the temperature
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 snprintf\cf4  \cf10 (\cf4 msg, \cf5 50\cf4 , \cf5 "%.1f"\cf4 , Temperature\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "Publish message for t: "\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf4 msg\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 client\cf4 .\cf7 publish\cf10 (\cf5 "student/CASA0014/plant/Emer3ld/temperature"\cf4 , msg\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 Humidity = \cf7 dht\cf4 .\cf7 readHumidity\cf10 ()\cf4 ;\cf8  // Gets the values of the humidity
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 snprintf\cf4  \cf10 (\cf4 msg, \cf5 50\cf4 , \cf5 "%.0f"\cf4 , Humidity\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "Publish message for h: "\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf4 msg\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 client\cf4 .\cf7 publish\cf10 (\cf5 "student/CASA0014/plant/Emer3ld/humidity"\cf4 , msg\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 //Moisture = analogRead(soilPin);\'a0\'a0 // moisture read by readMoisture function
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 snprintf\cf4  \cf10 (\cf4 msg, \cf5 50\cf4 , \cf5 "%.0i"\cf4 , Moisture\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "Publish message for m: "\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf4 msg\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 client\cf4 .\cf7 publish\cf10 (\cf5 "student/CASA0014/plant/Emer3ld/moisture"\cf4 , msg\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 callback\cf10 (\cf9 char*\cf4  \cf10 topic\cf4 , byte\cf9 *\cf4  \cf10 payload\cf4 , \cf9 unsigned\cf4  \cf9 int\cf4  \cf10 length)\cf4  \cf10 \{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "Message arrived ["\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf4 topic\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "] "\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf2 for\cf4  \cf10 (\cf9 int\cf4  i = \cf5 0\cf4 ; i < length; i++\cf10 )\cf4  \cf10 \{
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf7 Serial\cf4 .\cf7 print\cf10 ((\cf9 char\cf10 )\cf7 payload\cf4 [i]\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf10 \}
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // Switch on the LED if an 1 was received as first character
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf2 if\cf4  \cf10 ((\cf9 char\cf10 )\cf7 payload\cf4 [\cf5 0\cf4 ] == '1'\cf10 )\cf4  \cf10 \{
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf7 digitalWrite\cf10 (\cf4 BUILTIN_LED, LOW\cf10 )\cf4 ;\cf8 \'a0\'a0 // Turn the LED on (Note that LOW is the voltage level
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0\'a0\'a0 // but actually the LED is on; this is because it is active low on the ESP-01)
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf10 \}\cf4  \cf2 else\cf4  \cf10 \{
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf7 digitalWrite\cf10 (\cf4 BUILTIN_LED, HIGH\cf10 )\cf4 ;\cf8 \'a0 // Turn the LED off by making the voltage HIGH
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf10 \}
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 reconnect\cf10 ()\cf4  \cf10 \{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // Loop until we're reconnected
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf2 while\cf4  \cf10 (\cf4 !\cf7 client\cf4 .\cf7 connected\cf10 ())\cf4  \cf10 \{
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "Attempting MQTT connection..."\cf10 )\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0\'a0\'a0 // Create a random client ID
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0\'a0\'a0 String clientId = \cf5 "ESP8266Client-"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 clientId += \cf7 String\cf10 (\cf7 random\cf10 (\cf4 0x\cf5 ffff\cf10 )\cf4 , HEX\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0\'a0\'a0 // Attempt to connect with clientID, username and password
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf2 if\cf4  \cf10 (\cf7 client\cf4 .\cf7 connect\cf10 (\cf7 clientId\cf4 .\cf7 c_str\cf10 ()\cf4 , mqttuser, mqttpass\cf10 ))\cf4  \cf10 \{
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0\'a0\'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf5 "connected"\cf10 )\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0\'a0\'a0\'a0\'a0 // ... and resubscribe
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0\'a0\'a0\'a0\'a0 \cf7 client\cf4 .\cf7 subscribe\cf10 (\cf5 "student/CASA0014/plant/Emer3ld/inTopic"\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0 \'a0\cf10 \}\cf4  \cf2 else\cf4  \cf10 \{
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0\'a0\'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf5 "failed, rc="\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0\'a0\'a0 \cf7 Serial\cf4 .\cf7 print\cf10 (\cf7 client\cf4 .\cf7 state\cf10 ())\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0\'a0\'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf5 " try again in 5 seconds"\cf10 )\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0\'a0\'a0\'a0\'a0 // Wait 5 seconds before retrying
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0\'a0\'a0\'a0\'a0 \cf7 delay\cf10 (\cf5 5000\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0\'a0\'a0 \cf10 \}
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 startWebserver\cf10 ()\cf4  \cf10 \{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf8 \'a0 // when connected and IP address obtained start HTTP server\'a0 
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 server\cf4 .\cf7 on\cf10 (\cf5 "/"\cf4 , handle_OnConnect\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 server\cf4 .\cf7 onNotFound\cf10 (\cf4 handle_NotFound\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 server\cf4 .\cf7 begin\cf10 ()\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 Serial\cf4 .\cf7 println\cf10 (\cf5 "HTTP server started"\cf10 )\cf4 ;\'a0 
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 handle_OnConnect\cf10 ()\cf4  \cf10 \{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 Temperature = \cf7 dht\cf4 .\cf7 readTemperature\cf10 ()\cf4 ;\cf8  // Gets the values of the temperature
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 Humidity = \cf7 dht\cf4 .\cf7 readHumidity\cf10 ()\cf4 ;\cf8  // Gets the values of the humidity
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf7 server\cf4 .\cf7 send\cf10 (\cf5 200\cf4 , \cf5 "text/html"\cf4 , \cf7 SendHTML\cf10 (\cf4 Temperature, Humidity, Moisture\cf10 ))\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf9 void\cf4  \cf7 handle_NotFound\cf10 ()\cf4  \cf10 \{
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0 \cf7 server\cf4 .\cf7 send\cf10 (\cf5 404\cf4 , \cf5 "text/plain"\cf4 , \cf5 "Not found"\cf10 )\cf4 ;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \

\f1\fs24 \cf4 String \cf7 SendHTML\cf10 (\cf9 float\cf4  \cf10 Temperaturestat\cf4 , \cf9 float\cf4  \cf10 Humiditystat\cf4 , \cf9 int\cf4  \cf10 Moisturestat)\cf4  \cf10 \{
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 String ptr = \cf5 "<!DOCTYPE html> <html>\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<head><meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0, user-scalable=no\\">\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<title>ESP8266 DHT22 Report</title>\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<style>html \{ font-family: Helvetica; display: inline-block; margin: 0px auto; text-align: center;\}\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "body\{margin-top: 50px;\} h1 \{color: #444444;margin: 50px auto 30px;\}\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "p \{font-size: 24px;color: #444444;margin-bottom: 10px;\}\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "</style>\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "</head>\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<body>\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<div id=\\"webpage\\">\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<h1>ESP8266 Huzzah DHT22 Report</h1>\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<p>Temperature: "\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf10 (\cf9 int\cf10 )\cf4 Temperaturestat;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 " C</p>"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<p>Humidity: "\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf10 (\cf9 int\cf10 )\cf4 Humiditystat;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "%</p>"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<p>Moisture: "\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += Moisturestat;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "</p>"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<p>Sampled on: "\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf7 GB\cf4 .\cf7 dateTime\cf10 (\cf5 "l,"\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "<br>"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf7 GB\cf4 .\cf7 dateTime\cf10 (\cf5 "d-M-y H:i:s T"\cf10 )\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "</p>"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "</div>\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "</body>\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 ptr += \cf5 "</html>\\n"\cf4 ;
\f0\fs32 \cf6 \

\f1\fs24 \cf4 \'a0 \cf2 return\cf4  ptr;
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf10 \}
\f0\fs32 \cf6 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf4 \'a0
\f0\fs32 \cf6 \
}